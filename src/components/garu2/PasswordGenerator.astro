---
---

<section>
	<div class='main-card'>
		<h5>Copied!</h5>
		<h2>Password <span>Generator</span></h2>
		<div class='input-copy'>
			<div class='password'>
				<span id='pw-text'>Zf0#vl3O_92C</span>
				<a href=''><img src='/copyIcon.svg' alt='icon copy' /></a>
			</div>
		</div>
		<input id='range' type='range' min='4' max='20' step='1' onchange='showVal(this.value)' />
		<p class='display-pw-size'>Password Size: <span>12</span></p>

		<div class='select-option'>
			<input id='upper' type='checkbox' checked />
			<label for='upper'>Contain Uppercase Letters</label>
		</div>
		<div class='select-option'>
			<input id='lower' type='checkbox' checked />
			<label for='lower'>Contain Lowercase Letters</label>
		</div>
		<div class='select-option'>
			<input id='number' type='checkbox' checked />
			<label for='number'>Contain Numbers</label>
		</div>
		<div class='select-option'>
			<input id='symbol' type='checkbox' checked />
			<label for='symbol'>Contain Symbols</label>
		</div>
		<button class='generate'> Generate</button>
	</div>
</section>

<style>
	@import url('https://fonts.googleapis.com/css2?family=Lato:wght@100;300;400;700;900&display=swap');
	section {
		width: 100%;
		height: 100vh;
		display: flex;
		justify-content: center;
		align-items: center;
		background-size: 300% 300%;
		background-image: linear-gradient(
			-45deg,
			rgba(59, 173, 227, 1) 0%,
			rgba(87, 111, 230, 1) 25%,
			rgba(152, 68, 183, 1) 51%,
			rgba(255, 53, 127, 1) 100%
		);
		animation: AnimateBG 20s ease infinite;
	}

	@keyframes AnimateBG {
		0% {
			background-position: 0% 50%;
		}
		50% {
			background-position: 100% 50%;
		}
		100% {
			background-position: 0% 50%;
		}
	}
	.main-card {
		width: 360px;
		background-color: #8cdfffe0;
		padding: 26px;
		border-radius: 4px;
		margin: 8% auto 0;
		font-family: 'Lato', sans-serif;
		box-shadow: 0 2.8px 2.2px rgb(0 0 0 / 3%), 0 6.7px 5.3px rgb(0 0 0 / 5%),
			0 12.5px 10px rgb(0 0 0 / 6%), 0 22.3px 17.9px rgb(0 0 0 / 7%),
			0 41.8px 33.4px rgb(0 0 0 / 9%), 0 100px 80px rgb(0 0 0 / 12%);
		position: relative;
		overflow: hidden;
	}
	.main-card h2 {
		color: #228af5;
		margin-bottom: 0;
		text-transform: uppercase;
		font-weight: 800;
		margin-top: 3px;
		text-align: center;
		font-size: 23px;
	}
	.main-card h2 span {
		color: #fff;
	}
	.main-card p {
		font-weight: 600;
	}
	.main-card hr {
		margin-top: 4px;
		border-color: #228af5;
	}
	.main-card input[type='range'] {
		width: 100%;
	}
	.main-card h5 {
		position: absolute;
		right: 25px;
		bottom: 150px;
		writing-mode: tb;
		background: #fff;
		padding: 6px 2px;
		border-radius: 4px;
		color: #228af5;
		font-weight: 600;
		display: none;
	}

	.input-copy .password {
		padding: 13px 10px;
		border-radius: 4px;
		font-size: 20px;
		margin-bottom: 9px;
		margin-top: 25px;
		background-color: aliceblue;
		display: flex;
		justify-content: space-between;
	}
	.main-card .generate:focus {
		animation-name: move02;
		animation-duration: 2s;
	}
	@keyframes move02 {
		0% {
		}
		50% {
			transform: translateX(500px);
		}
		55% {
			transform: translateY(400px);
		}
		60% {
			transform: translateX(-500px);
		}
	}
	.input-copy .password a img {
		width: 22px;
	}
	.input-copy .password a:target .main-card h5 {
		color: red;
	}
	.animationC {
		animation-name: copied01;
		animation-duration: 3s;
	}
	@keyframes copied01 {
		0% {
			right: 25px;
			bottom: 150px;
		}
		100% {
			right: 25px;
			bottom: -100px;
		}
	}
	.animationB {
		animation-name: move01;
		animation-duration: 2s;
	}
	@keyframes move01 {
		0% {
			transform: rotate(0deg);
		}
		25% {
			transform: rotate(0deg);
		}
		50% {
			transform: rotate(30deg);
		}
		75% {
			transform: rotate(30deg);
		}
		100% {
			transform: rotate(0deg);
		}
	}
	.select-option {
		margin-bottom: 5px;
	}
	.select-option label {
		font-size: 17px;
	}

	.main-card .generate {
		border: solid 2px aliceblue;
		padding: 10px 23px;
		color: #228af5;
		font-family: 'Lato', sans-serif;
		font-weight: 800;
		font-size: 14px;
		border-radius: 3px;
		background-color: aliceblue;
		margin-top: 14px;
		text-transform: uppercase;
		width: 100%;
	}
	.main-card .generate:hover {
		background-color: #8cdfffe0;
		color: #fff;
	}
</style>

<script defer>
	const textPw = document.querySelector('#pw-text')
	const displaySize = document.querySelector('.display-pw-size span')
	const btnGenerate = document.querySelector('.generate')
	const clipboard = document.querySelector('.password a')
	const copied = document.querySelector('.main-card h5')

	const upper = document.querySelector('#upper')
	const lower = document.querySelector('#lower')
	const number = document.querySelector('#number')
	const symbol = document.querySelector('#symbol')

	let passwordAll = ''

	const upperLetters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' // 26
	const lowerLetters = 'abcdefghijklmnopqrstuvwxyz' // 26
	const numbers = '0123456789' // 10
	const symbols = '!@#$%^&*()_+=' // 13

	addEventLinsteners()
	function addEventLinsteners() {
		btnGenerate.addEventListener('click', generatePw)

		clipboard.addEventListener('click', copyPw)
	}

	function copyPw(e) {
		e.preventDefault()
		const password = textPw.textContent
		if (password) {
			const textArea = document.createElement('textarea')
			textArea.value = password
			document.body.appendChild(textArea)
			textArea.select()
			document.execCommand('copy')
			textArea.remove()
			copied.style.display = 'block'
			copied.classList.add('animationC')
			btnGenerate.classList.add('animationB')
			setTimeout(() => {
				copied.style.display = 'none'
				copied.classList.remove('animationC')
				btnGenerate.classList.remove('animationB')
			}, 2000)
		}
	}

	function generatePw(e) {
		passwordAll = ''
		if (upper.checked) {
			passwordAll += getUpperCase()
		}
		if (lower.checked) {
			passwordAll += getLowerCase()
		}
		if (number.checked) {
			passwordAll += getNumberCase()
		}
		if (symbol.checked) {
			passwordAll += getSymbolCase()
		}

		if (upper.checked || lower.checked || number.checked || symbol.checked) {
			completePw()
		}
		// console.log(typeof(displaySize.textContent));
	}

	function completePw() {
		while (passwordAll.length < parseInt(displaySize.textContent)) {
			const numberR = getRandom()
			if (upper.checked && numberR === 0) {
				passwordAll += getUpperCase()
			}
			if (lower.checked && numberR === 1) {
				passwordAll += getLowerCase()
			}
			if (number.checked && numberR === 2) {
				passwordAll += getNumberCase()
			}
			if (symbol.checked && numberR === 3) {
				passwordAll += getSymbolCase()
			}
		}
		// Animation to generate password
		animationPwd()
		setTimeout(() => {
			textPw.innerHTML = passwordAll
		}, 600)
	}

	function getRandomNumber(max) {
		return Math.floor(Math.random() * max)
	}
	function getRandom() {
		return Math.floor(Math.random() * 4)
	}

	function getUpperCase() {
		return upperLetters[getRandomNumber(upperLetters.length)]
	}
	function getLowerCase() {
		return lowerLetters[getRandomNumber(lowerLetters.length)]
	}
	function getNumberCase() {
		return numbers[getRandomNumber(numbers.length)]
	}
	function getSymbolCase() {
		return symbols[getRandomNumber(symbols.length)]
	}

	function showVal(value) {
		displaySize.textContent = value
	}

	function animationPwd() {
		setTimeout(() => {
			textPw.innerHTML = 'Zf0#vl3O_92C'
			setTimeout(() => {
				textPw.innerHTML = 'Cu7(Ba*7(5Mn'
				setTimeout(() => {
					textPw.innerHTML = 'Yv3))mQ5EN%='
					setTimeout(() => {
						textPw.innerHTML = 'Yv1$_V^77t33'
						setTimeout(() => {
							textPw.innerHTML = 'Hn6#R)96K!m@'
						}, 100)
					}, 100)
				}, 100)
			}, 100)
		}, 100)
	}
</script>
